{
	"console.log": {
		"scope": "javascript,typescript",
		"prefix": "cl",
		"body": [
			"console.log($1);",
		],
		"description": "Log output to console"
	},
	"console.table": {
		"scope": "javascript,typescript",
		"prefix": "ct",
		"body": [
			"console.table($1);",
		],
		"description": "Log output to console"
	},
	"debugger": {
		"scope": "javascript,typescript",
		"prefix": "de",
		"body": [
			"debugger;",
		],
		"description": "Debugger"
	},
	"vue template script setup ts composition api": {
		"scope": "vue",
		"prefix": "vts",
		"body": [
			"<script lang=\"ts\" setup>",
			"\t$1",
			"</script>",
			"",
			"<template>",
			"  <div>",
			"",
			"  </div>",
			"</template>"
		],
		"description": "Vue template script setup ts composition api"
	},
	"Pinia Setup": {
		"scope": "javascript,typescript",
		"prefix": "pn",
		"body": [
			"export const use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store = defineStore('$TM_FILENAME_BASE', () => {",
			" $0",
			" return {}",
			"})",
			"",
			"if (import.meta.hot) {",
			" import.meta.hot.accept(acceptHMRUpdate(use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store, import.meta.hot))",
			"}",
			""
		],
		"description": "Bootstrap the code needed for a Vue.js Pinia Setup Store file"
	},
	"import": {
		"scope": "javascript,typescript",
		"prefix": "im",
		"description": "Import a module",
		"body": [
			"import { $1 } from '$2';"
		],
	},
	"vue-reactive": {
		"scope": "javascript,typescript,vue",
		"prefix": "reactive",
		"description": "reactive",
		"body": [
			"reactive({",
			"  $2",
			"})"
		]
	},
	"vue-ref": {
		"scope": "javascript,typescript,vue",
		"prefix": "ref",
		"description": "ref",
		"body": [
			"ref($2)"
		]
	},
	"vue-watch": {
		"scope": "javascript,typescript,vue",
		"prefix": "watch",
		"description": "watch",
		"body": [
			"watch($1, (newValue, oldValue) => {",
			"  $2",
			"})"
		]
	},
	"vue-computed": {
		"scope": "javascript,typescript,vue",
		"prefix": "computed",
		"description": "computed",
		"body": [
			"computed(() => { $1 })"
		]
	},
	"vue-watch-effect": {
		"scope": "javascript,typescript,vue",
		"prefix": "watchEffect",
		"description": "watchEffect",
		"body": [
			"watchEffect(() => {",
			"  $1",
			"})"
		]
	},
}